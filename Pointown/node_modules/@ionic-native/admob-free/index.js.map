{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/admob-free/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromEvent';\r\n\r\nexport interface AdMobFreeBannerConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n  /**\r\n   * Set to true, to put banner at top\r\n   */\r\n  bannerAtTop?: boolean;\r\n  /**\r\n   * Set to true, to allow banner overlap WebView\r\n   */\r\n  overlap?: boolean;\r\n  /**\r\n   * Set to true to avoid ios7 status bar overlap\r\n   */\r\n  offsetTopBar?: boolean;\r\n  /**\r\n   * Banner  size\r\n   */\r\n  size?: string;\r\n}\r\n\r\nexport interface AdMobFreeInterstitialConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n}\r\n\r\nexport interface AdMobFreeRewardVideoConfig {\r\n  /**\r\n   * Ad Unit ID\r\n   */\r\n  id?: string;\r\n  /**\r\n   * Receiving test ad\r\n   */\r\n  isTesting?: boolean;\r\n  /**\r\n   * Auto show ad when loaded\r\n   */\r\n  autoShow?: boolean;\r\n}\r\n\r\n/**\r\n * @name AdMob Free\r\n * @description\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { AdMobFree, AdMobFreeBannerConfig } from '@ionic-native/admob-free';\r\n *\r\n *\r\n * constructor(private admobFree: AdMobFree) { }\r\n *\r\n *\r\n * ...\r\n *\r\n *\r\n * const bannerConfig: AdMobFreeBannerConfig = {\r\n *  // add your config here\r\n *  // for the sake of this example we will just use the test config\r\n *  isTesting: true,\r\n *  autoShow: true\r\n * };\r\n * this.admobFree.banner.config(bannerConfig);\r\n *\r\n * this.admobFree.banner.prepare()\r\n *   .then(() => {\r\n *     // banner Ad is ready\r\n *     // if we set autoShow to false, then we will need to call the show method here\r\n *   })\r\n *   .catch(e => console.log(e));\r\n *\r\n *\r\n * ```\r\n * @interfaces\r\n * AdMobFreeBannerConfig\r\n * AdMobFreeInterstitialConfig\r\n * AdMobFreeRewardVideoConfig\r\n * @classes\r\n * AdMobFreeBanner\r\n * AdMobFreeInterstitial\r\n * AdMobFreeRewardVideo\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob',\r\n  repo: 'https://github.com/ratson/cordova-plugin-admob-free',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n@Injectable()\r\nexport class AdMobFree extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Convenience object to get event names\r\n   * @type {Object}\r\n   */\r\n  events: any = {\r\n    BANNER_LOAD: 'admob.banner.events.LOAD',\r\n    BANNER_LOAD_FAIL: 'admob.banner.events.LOAD_FAIL',\r\n    BANNER_OPEN: 'admob.banner.events.OPEN',\r\n    BANNER_CLOSE: 'admob.banner.events.CLOSE',\r\n    BANNER_EXIT_APP: 'admob.banner.events.EXIT_APP',\r\n\r\n    INTERSTITIAL_LOAD: 'admob.interstitial.events.LOAD',\r\n    INTERSTITIAL_LOAD_FAIL: 'admob.interstitial.events.LOAD_FAIL',\r\n    INTERSTITIAL_OPEN: 'admob.interstitial.events.OPEN',\r\n    INTERSTITIAL_CLOSE: 'admob.interstitial.events.CLOSE',\r\n    INTERSTITIAL_EXIT_APP: 'admob.interstitial.events.EXIT_APP',\r\n\r\n    REWARD_VIDEO_LOAD: 'admob.rewardvideo.events.LOAD',\r\n    REWARD_VIDEO_LOAD_FAIL: 'admob.rewardvideo.events.LOAD_FAIL',\r\n    REWARD_VIDEO_OPEN: 'admob.rewardvideo.events.OPEN',\r\n    REWARD_VIDEO_CLOSE: 'admob.rewardvideo.events.CLOSE',\r\n    REWARD_VIDEO_EXIT_APP: 'admob.rewardvideo.events.EXIT_APP',\r\n    REWARD_VIDEO_START: 'admob.rewardvideo.events.START',\r\n    REWARD_VIDEO_REWARD: 'admob.rewardvideo.events.REWARD'\r\n  };\r\n\r\n  /**\r\n   * Watch an event\r\n   * @param event {string} event name\r\n   * @return {Observable<any>}\r\n   */\r\n  on(event: string): Observable<any> {\r\n    return Observable.fromEvent(document, event);\r\n  }\r\n\r\n  /**\r\n   * Returns the AdMobFreeBanner object\r\n   * @type {AdMobFreeBanner}\r\n   */\r\n  banner: AdMobFreeBanner = new AdMobFreeBanner();\r\n\r\n  /**\r\n   * Returns the AdMobFreeInterstitial object\r\n   * @type {AdMobFreeInterstitial}\r\n   */\r\n  interstitial: AdMobFreeInterstitial = new AdMobFreeInterstitial();\r\n\r\n  /**\r\n   * Returns the AdMobFreeRewardVideo object\r\n   * @type {AdMobFreeRewardVideo}\r\n   */\r\n  rewardVideo: AdMobFreeRewardVideo = new AdMobFreeRewardVideo();\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.banner',\r\n})\r\nexport class AdMobFreeBanner {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeBannerConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig { return; }\r\n\r\n  /**\r\n   * Hide the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  hide(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Create banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Remove the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  remove(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the banner.\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.interstitial',\r\n})\r\nexport class AdMobFreeInterstitial {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeInterstitialConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig { return; }\r\n\r\n  /**\r\n   * Check if interstitial is ready\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  isReady(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Prepare interstitial\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the interstitial\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\n@Plugin({\r\n  pluginName: 'AdMobFree',\r\n  plugin: 'cordova-plugin-admob-free',\r\n  pluginRef: 'admob.rewardvideo',\r\n})\r\nexport class AdMobFreeRewardVideo {\r\n\r\n  /**\r\n   * Update config.\r\n   * @param options\r\n   * @return {AdMobFreeRewardVideoConfig}\r\n   */\r\n  @Cordova({ sync: true })\r\n  config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig { return; }\r\n\r\n  /**\r\n   * Check if reward video is ready\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  isReady(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Prepare reward video\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  prepare(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show the reward video\r\n   * @return {Promise<any>}\r\n   */\r\n  @Cordova({ otherPromise: true })\r\n  show(): Promise<any> { return; }\r\n\r\n}\r\n"]}